# encoding: UTF-8
# frozen_string_literal: true

describe APIv2::K, type: :request do
  describe 'GET /api/v2/k' do
    let(:points) { [[1529046660, 8850.02322195, 8850.02322195, 8850.02322195, 8850.02322195, 0], [1529046720, 8850.02322195, 8850.02322195, 8850.02322195, 8850.02322195, 0], [1529046780, 8850.02322195, 8850.02322195, 8850.02322195, 8850.02322195, 0], [1529046840, 8848.62324404, 8858.1818079, 8848.62324404, 8858.1818079, 0.085], [1529046900, 8858.1818079, 8858.1818079, 8858.1818079, 8858.1818079, 0], [1529046960, 8858.1818079, 8858.1818079, 8858.1818079, 8858.1818079, 0], [1529047020, 8872.12911285, 8884.2214125, 8872.12911285, 8884.2214125, 0.3387], [1529047080, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047140, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047200, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047260, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047320, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047380, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047440, 8884.2214125, 8884.2214125, 8884.2214125, 8884.2214125, 0], [1529047500, 8863.60450049, 8863.60450049, 8863.60450049, 8863.60450049, 0.0662], [1529047560, 8863.60450049, 8863.60450049, 8863.60450049, 8863.60450049, 0], [1529047620, 8863.60450049, 8863.60450049, 8863.60450049, 8863.60450049, 0], [1529047680, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0.0025], [1529047740, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529047800, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529047860, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529047920, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529047980, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529048040, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529048100, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0.063], [1529048160, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0.0017], [1529048220, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529048280, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529048340, 8826.99996825, 8826.99996825, 8826.99996825, 8826.99996825, 0.0165], [1529048400, 8826.99996825, 8826.99996825, 8826.99996825, 8826.99996825, 0]] }
    before { KlineDB.redis.rpush('peatio:btcusd:k:1', points) }
    after { KlineDB.redis.flushall }

    def load(query = {})
      api_get '/api/v2/k?' + query.merge(market: :btcusd).to_query
      expect(response).to have_http_status 200
    end

    context 'data exists' do
      it 'without timestamp' do
        load
        expect(JSON.parse(response.body)).to eq points
      end

      it 'with timestamp' do
        load(timestamp: 1529048300)
        expect(JSON.parse(response.body)).to eq [[1529048280, 8833.03885575, 8833.03885575, 8833.03885575, 8833.03885575, 0], [1529048340, 8826.99996825, 8826.99996825, 8826.99996825, 8826.99996825, 0.0165], [1529048400, 8826.99996825, 8826.99996825, 8826.99996825, 8826.99996825, 0]]
      end
    end

    context 'data is missing' do
      before { KlineDB.redis.flushall }

      it 'without timestamp' do
        load
        expect(JSON.parse(response.body)).to eq []
      end

      it 'with timestamp' do
        load(timestamp: 1529048300)
        expect(JSON.parse(response.body)).to eq []
      end
    end
  end
end
